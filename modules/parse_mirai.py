# -*- coding: utf-8 -*-
from __future__ import unicode_literals

import sys
from c2utils import parse_addr

moduleName="parse_mirai"
moduleVersion="0.1"
minimumChopLib="4.0"

def module_info():
    return "A module to parse C2 attack commands from a Mirai DDoS Bot payload \nThis is meant to be run against mirai C2 traffic not DDoS traffic.\nHappy Hunting!"

def init(module_data):
    module_options = { 'proto': [{'tcp': ''}] }
    return module_options

def handleStream(tcp):
    ((src, sport), (dst, dport)) = parse_addr(tcp)
    if tcp.server.count_new > 0:
        data = tcp.server.data[:tcp.server.count_new]
        count = tcp.server.count_new
        direction = 'to_server'
        color = "RED"
    else:
        data = tcp.client.data[:tcp.client.count_new]
        count = tcp.client.count_new
        direction = 'to_client'
        color = "GREEN"

    handle_bytes(data, color, direction, tcp.module_data)
    tcp.discard(count)

def handle_bytes(data, color, direction, module_data):
	if (sys.getsizeof(data)-37) == int('0x'+''.join(x.encode('hex') for x in data[:2]),16):
		chop.prnt('Possible Mirai Attack Packet {}: {}'.format(direction, ':'.join(x.encode('hex') for x in data)+'\n'), None)
		chop.prnt('[attack] Num of Targets: {}'.format(int('0x'+''.join(x.encode('hex') for x in data[7:8]),16)))
		chop.prnt('[attack] Attack Type: {}'.format(int('0x'+''.join(x.encode('hex') for x in data[6:7]),16)))
		chop.prnt('[attack] Duration: {}'.format(int('0x'+''.join(x.encode('hex') for x in data[2:6]),16)))
		for idx ,char in enumerate(data[12:]):
			if char == '\x08':
				target_len = int('0x'+''.join(x.encode('hex') for x in data[idx+13]),16)
				target = ''.join(char for char in data[idx+14:idx+15+target_len])
				if data[idx+15+target_len:idx+15+target_len+2] == '\x07':
					port_len = int('0x'+''.join(x.encode('hex') for x in data[target_len:idx+15+target_len+2]),16)
					chop.prnt('[attack] target: {}:{}\n'.format(target, port_len), None)
				else:
					chop.prnt('[attack] target: {}\n'.format(target), None)
	elif '\x00\x00\x00\x01' == data.decode('utf-8'):
		chop.prnt('Possible Mirai Check-In {}: {}\n'.format(direction, ':'.join(x.encode('hex') for x in data)), None)
	elif '\x00\x00' == data:
		chop.prnt('Mirai {} Heartbeat Packet: {}\n'.format(direction, ':'.join(x.encode('hex') for x in data)), None)
	elif '\x00' == data:
		chop.prnt('Possible Mirai Bot Response {}: {}\n'.format(direction, ':'.join(x.encode('hex') for x in data)), None)
	else:
		chop.prnt('Unknown Packet {}: {}'.format(direction, ':'.join(x.encode('hex') for x in data)+'\n'), None)
	chop.json({'payload': data, 'direction': direction})

def shutdown(module_data):
    return

def taste(tcp):
	((src, sport),(dst, dport)) = tcp.addr
	return True

def teardown(tcp):
    return
